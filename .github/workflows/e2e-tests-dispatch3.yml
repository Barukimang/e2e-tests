name: Playwright and Synpress Tests for PRs, Pushes, and Dispatch Events

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - app-next-develop-push

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.47.1-focal # Updated to match Playwright version

    steps:
      # Step 1: Checkout the app-next Repository
      - name: Checkout App-Next Repository
        uses: actions/checkout@v4
        with:
          repository: aragon/app-next
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          token: ${{ secrets.APP_NEXT_ACCESS_TOKEN }}
          path: ./app-next

      # Step 2: Cache Node.js dependencies for App-Next
      - name: Cache Node.js modules for App-Next
        uses: actions/cache@v3
        with:
          path: ./app-next/node_modules
          key: app-next-${{ runner.os }}-${{ hashFiles('./app-next/yarn.lock') }}
          restore-keys: |
            app-next-${{ runner.os }}-

      # Step 3: Install dependencies for App-Next repository
      - name: Install dependencies for App-Next
        working-directory: ./app-next
        run: yarn install

      # Step 4: Cache Playwright Browsers
      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('./app-next/playwright.config.js') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      # Step 5: Start 'yarn dev' for App-Next (Start Development Server)
      - name: Start App-Next Development Server
        working-directory: ./app-next
        run: yarn dev &
        env:
          NODE_ENV: development

      # Step 6: Checkout the e2e-tests Repository (this repository)
      - name: Checkout e2e-tests Repository
        uses: actions/checkout@v4

      # Step 7: Cache Node.js dependencies for e2e-tests
      - name: Cache Node.js modules for e2e-tests
        uses: actions/cache@v3
        with:
          path: node_modules
          key: e2e-tests-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            e2e-tests-${{ runner.os }}-

      # Step 8: Install dependencies for e2e-tests
      - name: Install dependencies for e2e-tests
        run: yarn install

      # Step 9: Build Synpress cache (if needed)
      - name: Build Synpress cache
        run: xvfb-run npx synpress ./tests/

      # Step 10: Run E2E tests with Playwright (including server startup)
      - name: Run E2E tests (Playwright with server)
        run: xvfb-run yarn playwright test ./tests/multisig-plugin/02_publishProposal.spec.ts --project=chromium --debug --trace on
        continue-on-error: true

      # Step 11: Upload Playwright Report as Artifact
      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
